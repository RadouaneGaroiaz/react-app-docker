
/**
 * The plugin options
 */
interface HtmlWebpackPluginOptions {
    /**
     * The title to use for the generated HTML document
     */
    title: string,
    /**
     * The `webpack` require path to the template.
     * @see https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md
     */
    template: string,
    /**
     * Allow to use a html string instead of reading from a file
     */
    templateContent:
      false // Use the template option instead to load a file
      | string
      | Promise<string>,
    /**
     * Allows to overwrite the parameters used in the template
     */
    templateParameters:
      false // Pass an empty object to the template function
      | ((compilation: any, assets, assetTags: { headTags: Array<HtmlTagObject>, bodyTags: Array<HtmlTagObject> }, options: HtmlWebpackPluginOptions) => {[option: string]: any})
      | ((compilation: any, assets, assetTags: { headTags: Array<HtmlTagObject>, bodyTags: Array<HtmlTagObject> }, options: HtmlWebpackPluginOptions) => Promise<{[option: string]: any}>)
      | {[option: string]: any}
    /**
     * The file to write the HTML to.
     * Defaults to `index.html`.
     * Supports subdirectories eg: `assets/admin.html`
     */
    filename: string,
    /**
     * If `true` then append a unique `webpack` compilation hash to all included scripts and CSS files.
     * This is useful for cache busting
     */
    hash: boolean,
    /**
     * Inject all assets into the given `template` or `templateContent`.
   